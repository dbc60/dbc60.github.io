<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2015 on Doug&#39;s Place</title>
    <link>https://douglascuthbertson.com/years/2015.html</link>
    <description>Recent content in 2015 on Doug&#39;s Place</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>(c) 2015-2025 Douglas Cuthbertson (except where indicated otherwise). The content of this work is licensed under the [Creative Commons Attribution 4.0 (CC BY 4.0), International License](https://creativecommons.org/licenses/by/4.0/), again except where indicated otherwise</copyright>
    <lastBuildDate>Wed, 30 Dec 2015 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://douglascuthbertson.com/years/2015/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Blog on GitHub</title>
      <link>https://douglascuthbertson.com/2015/12/a-blog-on-github.html</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://douglascuthbertson.com/2015/12/a-blog-on-github.html</guid>
      <description>&lt;p&gt;What do you really need to know to setup a blog on GitHub?&lt;/p&gt;
&lt;p&gt;I want a platform to write about software development, design patterns, and anything else that came to mind. &lt;a href=&#34;https://help.github.com/articles/user-organization-and-project-pages/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub user pages&lt;/a&gt; looked like a good place to start. I&amp;rsquo;ve toyed with &lt;a href=&#34;https://jekyllrb.com/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jekyll&lt;/a&gt; and &lt;a href=&#34;http://compass-style.org/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Compass&lt;/a&gt; in the past, so I thought it would be easy to setup. For the most part, it is. Along the way, I discovered a few stumbling blocks that I will share.&lt;/p&gt;
&lt;h2 id=&#34;initial-setup&#34;&gt;Initial Setup&lt;/h2&gt;
&lt;p&gt;The initial steps (create a GitHub repository, install and configure Jekyll) were easy. The first stumbling block I ran into was ensuring the versions of my Ruby gems and my Jekyll configuration were consistent with what GitHub supported. GitHub doesn&amp;rsquo;t yet support Jekyll v3, which is what I have installed on my desktop.&lt;/p&gt;
&lt;p&gt;Fortunately they provide excellent &lt;a href=&#34;https://help.github.com/articles/using-jekyll-with-pages/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt;. The most important part is to add &lt;code&gt;gem &#39;github-pages&#39;&lt;/code&gt; to your &lt;code&gt;Gemfile&lt;/code&gt;. By running &lt;code&gt;bundle install&lt;/code&gt;, you get Jekyll and all the dependencies in the correct version to be compatible with Jekyll on GitHub.&lt;/p&gt;
&lt;p&gt;I also installed &lt;a href=&#34;http://compass-style.org/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Compass&lt;/a&gt;. It&amp;rsquo;s a nice tool that watches the files in the repository for changes, and recompiles the .scss files as needed. GitHub doesn&amp;rsquo;t use Compass, so you have to commit the CSS files it generates to the repository.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-blog&#34;&gt;Creating a Blog&lt;/h2&gt;
&lt;p&gt;Reading and following the documentation for GitHub pages, Jekyll and Compass will establish all of the scaffolding you need to start a blog. It will not provide any scaffolding for the structure and contents of the blog itself.&lt;/p&gt;
&lt;p&gt;I thought I&amp;rsquo;d be able to make a cool blog with responsive CSS so it would be readable on a variety of screen sizes. I learned quickly to keep things simple. I just don&amp;rsquo;t know enough CSS right now to make that happen. I stumbled upon (Googled for &amp;ldquo;html5 sidebar layout&amp;rdquo;) one good tutorial (which used to be at &lt;code&gt;http://multimedia.journalism.berkeley.edu/tutorials/css-layout/&lt;/code&gt;, but still exists &lt;a href=&#34;https://web.archive.org/web/20130310154517/http://multimedia.journalism.berkeley.edu/tutorials/css-layout/&#34; class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;on the Way Back machine&lt;/a&gt;). It enabled me to create the basic structure for this blog. Warning: I had to insert &lt;code&gt;p script { display: block;}&lt;/code&gt; to display the code blocks. Each code block is wrapped in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element and is written in an XML &lt;code&gt;&amp;lt;![CDATA[...]]&amp;gt;&lt;/code&gt; block. The user agent stylesheet sets &lt;code&gt;script {display: none; }&lt;/code&gt;, so I couldn&amp;rsquo;t see the code.&lt;/p&gt;
&lt;p&gt;I made a few adjustments to the styling and HTML to suit my taste. One thing I was delighted to learn was how to make the content area and the sidebar the same height. The tutorial presented a solution in JavaScript, but that didn&amp;rsquo;t work for posts. The disqus comment block wasn&amp;rsquo;t included in the calculation.&lt;/p&gt;
&lt;p&gt;The main content area and the sidebar are both included in &lt;code&gt;div&lt;/code&gt; section with the ID &lt;code&gt;boxes&lt;/code&gt; (&lt;code&gt;&amp;lt;div id=&amp;quot;boxes&amp;quot;&amp;gt;&lt;/code&gt;). All I had to do was style the &lt;code&gt;div&lt;/code&gt; with &lt;code&gt;display: flex;&lt;/code&gt;. Here&amp;rsquo;s the code and comment from my stylesheet.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/* Using display: flex; to make the sidebar column the same length as the main content.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   See: http://tutorialzine.com/2014/10/easiest-way-equal-height-sidebar/ for details.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   */
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#boxes {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    display: flex;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;more-to-do&#34;&gt;More To Do&lt;/h2&gt;
&lt;p&gt;There&amp;rsquo;s a lot of work that goes into making a web page look presentable. At the very least, text should be readable, sections should be well aligned, and the color theme should be pleasing to the eye. There is a lot to fiddle with, but I think I&amp;rsquo;ve done an okay job for now. I glad I have a place to write down ideas, write about projects I want to pursue and share some thoughts in general.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
